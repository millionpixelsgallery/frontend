name: Deploy

on:
  push:
    branches:
      - main
      - prod
      - staging
  # allow manual run
  workflow_dispatch:

jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: prod, staging
          pre_release_branches: main
          # release_branches: release.*,master

  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
      # Basic env setup and app build
      # Result: built app in /dist
      - run: echo "subdomain=dev" >> $GITHUB_ENV     
      - run: |
          echo "${{ secrets.DOTENV }}" >> .env
          cat .env
          ls -la
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'set network env'
        if: ${{ contains('prod',github.ref) }}
        run: |
          echo "subdomain=www" >> $GITHUB_ENV
          sed -i 's/REACT_APP_NETWORK=development/REACT_APP_NETWORK=production/' .env
      - run: echo "deploy_addr=${{ env.subdomain }}.${{ secrets.CLOUDFLARE_DOMAIN }}" >> $GITHUB_ENV
      - run: echo "deploy_tag=${{ needs.bump_version.outputs.new_tag }}" >> $GITHUB_ENV    
      - name: Load node v14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Install deps
        uses: bahmutov/npm-install@v1
        with:
          useYarn: true
      - name: Build app
        run: yarn build

      # Pinning
      # Result: CIDv0 hash
      - name: Pin via Pinata
        id: upload
        uses: aquiladev/ipfs-action@v0.1.5
        with:
          path: ./build
          service: pinata
          pinataKey: ${{ secrets.PINATA_API_KEY }}
          pinataSecret: ${{ secrets.PINATA_API_SECRET }}
          pinataPinName: ${{ github.repository }} on ipfs

      - name: Convert CIDv0 to CIDv1
        id: convert_cidv0
        uses: uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      # DNS
      - name: Display pin address
        run: |
          echo published as https://gateway.pinata.cloud/ipfs/${{ steps.upload.outputs.hash }}/
          echo cidv1 ${{ steps.convert_cidv0.outputs.cidv1 }}/
      - name: Update DNS with new IPFS hash
        env:
            CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
            CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
            RECORD_DOMAIN: ${{ secrets.CLOUDFLARE_DOMAIN }}
            RECORD_NAME: _dnslink.${{ env.subdomain }}
        uses: textileio/cloudflare-update-dnslink@master
        with:
            cid: ${{ steps.upload.outputs.hash }}

      # GitHub release with links
      - name: Create GitHub Release with tag ${{ needs.bump_version.outputs.new_tag }}
        if: ${{ contains('production',github.ref) }}
        id: create_release
        uses: ncipollo/release-action@v1.8.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.bump_version.outputs.new_tag }}
          name: ${{ needs.bump_version.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            IPFS hash of the deployment:
            - CIDv0: `${{ steps.upload.outputs.hash }}`
            The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [${{ env.deploy_addr }}](https://${{ env.deploy_addr }}/).
            IPFS gateways:
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
            - https://gateway.pinata.cloud/ipfs/${{ steps.upload.outputs.hash }}/
            - https://cloudflare-ipfs.com/ipfs/${{ steps.upload.outputs.hash }}/
            - https://ipfs.io/ipfs/${{ steps.upload.outputs.hash }}/
            ${{ needs.bump_version.outputs.changelog }}
